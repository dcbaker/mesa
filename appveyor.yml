# http://www.appveyor.com/docs/appveyor-yml
#
# To setup AppVeyor for your own personal repositories do the following:
# - Sign up
# - Add a new project
# - Select Git and fill in the Git clone URL
# - Setup a Git hook as explained in
#   https://github.com/appveyor/webhooks#installing-git-hook
# - Check 'Settings > General > Skip branches without appveyor.yml'
# - Check 'Settings > General > Rolling builds'
# - Setup the global or project notifications to your liking
#
# Note that kicking (or restarting) a build via the web UI will not work, as it
# will fail to find appveyor.yml .  The Git hook is the most practical way to
# kick a build.
#
# See also:
# - http://help.appveyor.com/discussions/problems/2209-node-grunt-build-specify-a-project-or-solution-file-the-directory-does-not-contain-a-project-or-solution-file
# - http://help.appveyor.com/discussions/questions/1184-build-config-vs-appveyoryaml

version: '{build}'

branches:
  except:
  - /^travis.*$/

# Don't download the full Mesa history to speed up cloning.  However the clone
# depth must not be too small, otherwise builds might fail when lots of patches
# are committed in succession, because the desired commit is not found on the
# truncated history.
#
# See also:
# - https://www.appveyor.com/blog/2014/06/04/shallow-clone-for-git-repositories
clone_depth: 100

# https://www.appveyor.com/docs/build-cache/
cache:
- '%LOCALAPPDATA%\pip\Cache -> appveyor.yml'
- win_flex_bison-2.5.15.zip
- llvm-5.0.1-msvc2017-mtd.7z

os: Visual Studio 2017

init:
# Appveyor defaults core.autocrlf to input instead of the default (true), but
# that can hide problems processing CRLF text on Windows
- git config --global core.autocrlf true

environment:
  WINFLEXBISON_VERSION: 2.5.15
  LLVM_ARCHIVE: llvm-5.0.1-msvc2017-mtd.7z
  matrix:
    - BUILD_SYSTEM: meson
    - BUILD_SYSTEM: scons

install:
# Check git config
- git config core.autocrlf
# Check pip
- py -2.7-32 --version
- py -2.7-32 -m pip --version
- py -3.7-64 --version
- py -3.7-64 -m pip --version
- if "%BUILD_SYSTEM%"=="scons" py -2.7-32 -m pip install pypiwin32 wheel mako==1.0.7 scons==3.0.1
- if "%BUILD_SYSTEM%"=="scons" set Path=C:\Python27\Scripts;%Path%
- if "%BUILD_SYSTEM%"=="scons" scons --version
- if "%BUILD_SYSTEM%"=="meson" py -3.7-64 -m pip install mako==1.0.7 meson>=0.48.0
- if "%BUILD_SYSTEM%"=="meson" set Path=C:\Python37-x64\Scripts;%Path%
- if "%BUILD_SYSTEM%"=="meson" meson --version
- if "%BUILD_SYSTEM%"=="meson" cinst -y pkgconfiglite
- if "%BUILD_SYSTEM%"=="meson" call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86
# Install flex/bison
- set WINFLEXBISON_ARCHIVE=win_flex_bison-%WINFLEXBISON_VERSION%.zip
- if not exist "%WINFLEXBISON_ARCHIVE%" appveyor DownloadFile "https://github.com/lexxmark/winflexbison/releases/download/v%WINFLEXBISON_VERSION%/%WINFLEXBISON_ARCHIVE%"
- 7z x -y -owinflexbison\ "%WINFLEXBISON_ARCHIVE%" > nul
- set Path=%CD%\winflexbison;%Path%
- win_flex --version
- win_bison --version
# Download and extract LLVM
- if not exist "%LLVM_ARCHIVE%" appveyor DownloadFile "https://people.freedesktop.org/~jrfonseca/llvm/%LLVM_ARCHIVE%"
- 7z x -y "%LLVM_ARCHIVE%" > nul
- if "%BUILD_SYSTEM%"=="scons" mkdir llvm\bin
- if "%BUILD_SYSTEM%"=="scons" set LLVM=%CD%\llvm
- if "%BUILD_SYSTEM%"=="meson" move llvm subprojects\
- if "%BUILD_SYSTEM%"=="meson" copy build-support\appveyor-llvm.meson.build subprojects\llvm\meson.build

build_script:
- if "%BUILD_SYSTEM%"=="scons" scons -j%NUMBER_OF_PROCESSORS% MSVC_VERSION=14.1 llvm=1
- if "%BUILD_SYSTEM%"=="meson" meson builddir --backend=vs2017 --buildtype=plain -Db_vscrt=mtd -Dbuild-tests=true -Dllvm=true -Dllvm-wrap=llvm 
- if "%BUILD_SYSTEM%"=="meson" cd builddir
- if "%BUILD_SYSTEM%"=="meson" msbuild mesa.sln /m

after_build:
- if "%BUILD_SYSTEM%"=="scons" scons -j%NUMBER_OF_PROCESSORS% MSVC_VERSION=14.1 llvm=1 check
# Doesn't work yet, a large number of tests fail
#- if "%BUILD_SYSTEM%"=="meson" ninja -C builddir test

# It's possible to setup notification here, as described in
# http://www.appveyor.com/docs/notifications#appveyor-yml-configuration , but
# doing so would cause the notification settings to be replicated across all
# repos, which is most likely undesired.  So it's better to rely on the
# Appveyor global/project notification settings.
